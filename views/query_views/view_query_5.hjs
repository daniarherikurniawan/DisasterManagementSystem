<!DOCTYPE html>
<html>
	<head>
		<title>DIMAS</title>
		<link href="../../stylesheets/bootstrap.min.css" rel="stylesheet">
	</head>
	<body>
		<div class="container">
			<div class="row">
				<h1><%title%></h1>
			</div>
			<div class="row" style=" white-space: pre-wrap; font-family: monospace;">
	A list of victims based on one of or the combinations of the following conditions:
	- of a certain disaster event or a certain type of disaster.
	- on a certain date or month or year.
	- that come from a certain village or subdistrict or district or province. 
			</div>
			<div ng-app="myApp">
				<div ng-controller="villageController">
					<div class="row " >
				       <div class="form-group col-md-4">
				        <label class="col-sm-6">{{type_of_query[0].name}}</label>
				        <div class="col-sm-6">
				        	<input ng-change=""  type="checkbox" ng-model="poin_1">
				        </div>
				        </div>
				       <div class="form-group col-md-4">
				        <label class="col-sm-6">{{type_of_query[1].name}}</label>
				        <div class="col-sm-6">
				        	<input ng-change="" type="checkbox" ng-model="poin_2">
				        </div>
				        </div>
				       <div class="form-group col-md-4">
				        <label class="col-sm-6">{{type_of_query[2].name}}</label>
				        <div class="col-sm-6">
				        	<input ng-change="" type="checkbox" ng-model="poin_3">
				        </div>
				        </div>
					</div>
					<br>

					   	<div ng-show="poin_1">
						    <div class="row">
						       <div class="form-group">
						        <label class="col-sm-2">Name of Disaster Event</label>
							        <div class="col-sm-10">
							        	<span ng-repeat="disaster_event in data_disaster_event" style="float:left ">
								            <input type="button" value="{{disaster_event.name}}" class="btn-info" ng-click="redirect_disaster_event(disaster_event._id)"/>
					       					<input type="button" value="X" class="btn-danger" style="margin:0 20px 20px -5px" ng-click="deleteDisasterEvent($index)"/>
								        </span>
								        <div ng-show="data_disaster_event.length == 0">
								        	<input type="text"  ng-change="findDisasterEventOnDB()"  ng-model="searchStringDisasterEvent" placeholder="name of the disaster event" class="form-control"   />
								        	<br>  
								        	<span ng-repeat="village in data_village" style="float:left ">
									            <input type="button" value="{{village.name}}" class="btn-info" />
						       					<input type="button" value="X" class="btn-danger" style="margin:0 20px 20px -5px" ng-click="deleteVillage($index)"/>
									        </span>
											<div ng-show="searchStringDisasterEvent.length != 0" >     
									            <div class="data-ctrl">
									                <span ng-repeat="disasterEvent in possibleDisasterEvent | searchForName:searchStringDisasterEvent">
									                    <p><input type="button" value="+" class="btn-success"  ng-click="addSingleDisasterEvent($index)"/> {{disasterEvent.name}}
									                </span>
									            </div>
								            </div>
							            </div>

							        </div>
						        </div>
						   	</div>
						   	<div class="form-horizontal"  >
							    <div class="row">
							       <div class="form-group">
							        <label class="col-sm-2">Certain Type of Disaster</label>
							        <div class="col-sm-3">
								         <select class="form-control btn btn-success dropdown-toggle" 
							        	 	ng-init="certain_type = type_disaster[0]"
							        	 	ng-options="t.name for t in type_disaster" 
											ng-model="certain_type"
											ng-change="updateIdDisasterAndIdVictim()"></select>
							       	</div>
							        </div>
							   	</div>
							</div>
						</div>

					   	<div ng-show="poin_2">
						<form class="form-horizontal" ng-submit="executePoin2()">
						    <div class="row">
						       <div class="form-group">
						        <label class="col-sm-2">At Certain Date</label>
						        <div class="col-sm-3"><input type="date" ng-model="certain_date"  class="form-control"  ng-change="" /></div>
						        </div>
						   	</div>
						    <div class="row">
						       <div class="form-group">
						        <label class="col-sm-2">At Certain Month</label>
						        <div class="col-sm-3">
						        <input type="month" ng-model="certain_month"  class="form-control"  ng-change="" /></div>
						        </div>
						   	</div>
						    <div class="row">
						       <div class="form-group">
						        <label class="col-sm-2">At Certain Year</label>
						        <div class="col-sm-3"><input type="number" placeholder="year between 2000 and 2020" ng-model="certain_year" min="2000" max="2020" class="form-control"  ng-change="" /></div>
						        </div>
						   	</div>
					  		<input ng-hide="poin_3" class="btn btn-success" type="submit" id="submit" value="Submit" />
						</form>
						</div>

					   	<div ng-show="poin_3">
					   	<form class="form-horizontal" ng-submit="executePoin3()">
							 <div class="row">
						        <div class="form-group">
							        <label class="col-sm-2">Village</label>
							        	<div class="col-sm-10">
								        	<span ng-repeat="village in data_village" style="float:left ">
									            <input type="button" value="{{village.name}}" class="btn-info" ng-click="processForm($index)"/>
						       					<input type="button" value="X" class="btn-danger" style="margin:0 20px 20px -5px" ng-click="deleteVillage($index)"/>
									        </span>
									        <div ng-hide="isOriginalVillageFilled">
									        	<input type="text" ng-change="findVillageOnDB()" ng-model="searchStringVillage" name="search_query" placeholder="type the name of village to search" class="form-control"  />
												<br>  
												<div ng-show="searchStringVillage.length != 0" >     
										            <div class="data-ctrl">
										                <span ng-repeat="village in possibleVillages | searchForName:searchStringVillage">
										                    <p><input type="button" value="+" class="btn-success"  ng-click="addVillage($index)"/> {{village.name}}
										                </span>
										            </div>
									            </div>
									        </div>
								        </div>

							        </div>
						   	</div>
						    <div class="row">
						       <div class="form-group">
						        <label class="col-sm-2">From Certain Subdistrict</label>
						        <div class="col-sm-3"><input type="text" ng-model="certain_subdistrict"  class="form-control"   /></div>
						        </div>
						   	</div>
						    <div class="row">
						       <div class="form-group">
						        <label class="col-sm-2">From Certain District</label>
						        <div class="col-sm-3"><input type="text" ng-model="certain_district"  class="form-control"   /></div>
						        </div>
						   	</div>
						    <div class="row">
						       <div class="form-group">
						        <label class="col-sm-2">From Certain Province</label>
						        <div class="col-sm-3"><input type="text" ng-model="certain_province"  class="form-control"   /></div>
						        </div>
						   	</div>
					  		<input  class="btn btn-success" type="submit" id="submit" value="Submit" />
						</form>
						</div>
				   	<div ng-hide="" class="form-horizontal"  >
					<br><hr><br>
						<div class="row">
					       <div class="form-group">
								<label class="col-sm-2">Recorded Disaster</label>
						        <div class="col-sm-10">
						        	<span ng-repeat="disaster in id_disasters" style="float:left; margin: 10px ">
							            <input type="button" value="{{disaster._id}}" class="btn-info" ng-click="redirect_disaster(disaster._id)"/>
							        </span>
						        </div>
						    </div>
				        </div>
				    </div>
					<br><hr><br>
				   	<div class="form-horizontal"  >
						<div class="row">
					       <div class="form-group">
								<label class="col-sm-2">Recorded Victims</label>
						        <div class="col-sm-10">
						        	<span ng-repeat="victim in result track by $index" style="float:left; margin: 10px ">
							            <input type="button" value="{{victim}}" class="btn-info" ng-click="redirect_victim(victim)"/>
							        </span>
						        </div>
						    </div>
				        </div>
				    </div>
				</div><!-- cpontroller -->
			</div><!-- MyApp -->


		</div>
	</body>
</html>
<script src="../../javascripts/jquery.min.js"></script>
<script src="../../javascripts/angular.min.js"></script>
<script src="../../javascripts/angular_directive.js"></script>
<script src="../../javascripts/angular-ui-router.js"></script>
<script src="../../javascripts/ui-bootstrap-tpls.min.js"></script>
<script src="../../javascripts//angular-animate.js"></script>
<script>
$app.controller("villageController", function($scope, $http, $templateRequest, $sce, $compile, $window){
		$scope.possibleDisasterEvent = [];
		$scope.data_disaster_event =[];
		$scope.id_disasters = [];
		$scope.id_total_disasters = [];
		$scope.id_victims = [];
		$scope.id_total_victims = [];

		$scope.type_disaster = [{
		        id: 0,
		        name: "All"        
		    },{
		        id: 1,
		        name: "Flood"        
		    }, {
		        id: 2,
		        name: "Landslide"        
		    }, {
		        id: 3,
		        name: "Earthquake"        
		    }, {
		        id: 4,
		        name: "Tornado"        
		    }, {
		        id: 5,
		        name: "Volcanic Eruption"        
		    }, {
		        id: 6,
		        name: "Tsunami"        
		    }];
		$scope.type_of_query = [{
		        id: 1,
		        name: "Query 5.1"        
		    }, {
		        id: 2,
		        name: "Query 5.2"       
		    }, {
		        id: 3,
		        name: "Query 5.3"        
		    }];

	  	$scope.findDisasterEventOnDB = function(){
			if($scope.searchStringDisasterEvent != undefined &&
				$scope.searchStringDisasterEvent.length>= 3 ){
				$http({
			        url: '/db/disaster_event/find_id_and_type_and_victim',
			        method: "POST",
			        data: {
		                search_term: $scope.searchStringDisasterEvent
		            }
			    })
			    .then(function(response) {
			    	$scope.possibleDisasterEvent = response.data;
			    }, 
			    function(response) { 
			        alert("failed: findDisasterEventOnDB"+response.data);
			    });
			}
		}

	    $scope.addSingleDisasterEvent = function(id) {
			$scope.id_total_disasters = $scope.possibleDisasterEvent[id].id_disasters ;
			$scope.id_disasters = $scope.id_total_disasters;
		    $scope.data_disaster_event.push($scope.possibleDisasterEvent[id]);
		    $scope.updateIdDisaster();
		    $scope.updateIdVictims();
	    };

	    $scope.updateIdDisasterAndIdVictim = function() {
		    $scope.updateIdDisaster();
		    $scope.updateIdVictims();
	    };

	    $scope.addMultipleDisasterEvent = function(disaster_events, callback) {
    		console.log("Adscsdc");
    		$scope.data_disaster_event = disaster_events;
    		for (var i = disaster_events.length - 1; i >= 0; i--) {
    			$scope.id_total_disasters = $scope.id_total_disasters.concat(disaster_events[i].id_disasters);
    		}
    		$http({
		        url: '/db/disaster/get_array_id',
		        method: "POST",
		        data: {
		        	array_id: $scope.id_total_disasters
		        }
		    })
		    .then(function(response) {
		    	$scope.id_total_disasters = response.data;
				$scope.id_disasters = $scope.id_total_disasters;
				$scope.updateIdVictims();
				callback($scope.result);
				return;
		    }, 
		    function(response) { // optional
		        callback("failed: "+response.data);
		    });
	    };

	    $scope.deleteDisasterEvent = function(id) {
	    	$scope.data_disaster_event.splice(id, 1);
	    	$scope.id_disasters = [];
	    	$scope.id_total_disasters = [];
	    	$scope.result = [];
	    };
	    
	    $scope.updateIdDisaster = function() {
	    	$scope.filterByTypeDisaster($scope.certain_type.id);
	    	// $scope.filterByDate();
	    };
		$scope.updateIdVictims = function() {
	    	/*collect victim id*/
	    	possible_duplicate = [];
	    	$scope.result = [];
	    	for (var i = $scope.id_disasters.length - 1; i >= 0; i--) {
	    		// console.log($scope.id_disasters[i].id_victims);
	    		possible_duplicate = possible_duplicate.concat($scope.id_disasters[i].id_victims);
	    	}
			$.each(possible_duplicate, function(i, el){
			    if($.inArray(el, $scope.result) === -1) $scope.result.push(el);
			});
	    };
		$scope.filterByTypeDisaster = function(id) {
	    	switch($scope.certain_type.id){
	    		case 0 :
	    			$scope.id_disasters = $scope.id_total_disasters;
	    			break;
	    		default:
	    			$scope.id_disasters = [];
	    			for (var i = $scope.id_total_disasters.length - 1; i >= 0; i--) {
	    				if($scope.id_total_disasters[i].type == $scope.type_disaster[id].name)
		    				$scope.id_disasters.push($scope.id_total_disasters[i]);
	    			};
	    	}
	    };

	   
	    $scope.redirect_disaster_event = function(id){
            $window.open("/show/disaster_event/"+id, '_blank');
        };
	    $scope.redirect_disaster = function(id){
            $window.open("/show/disaster/"+id, '_blank');
        };
	    $scope.redirect_victim = function(id){
            $window.open("/show/victim/"+id, '_blank');
        };
	    $scope.redirect_village = function(id){
            $window.open("/show/village/"+id, '_blank');
        };
	    $scope.redirect_medical_facility = function(id){
            $window.open("/show/medical_facility/"+id, '_blank');
        };
	    $scope.redirect_refugee_camp = function(id){
            $window.open("/show/refugee_camp/"+id, '_blank');
        };
        $scope.getAllIdVictim = function(callback){
	  		$http({
		        url: '/db/victim/get_id',
		        method: "POST",
		        data: {}
		    })
		    .then(function(response) {
		    	callback(response.data);
		    }, 
		    function(response) { // optional
		        callback("failed: "+response.data);
		    });
	  	}

	  	$scope.executePoin1 = function(callback){
	  		if($scope.poin_1){
	  			$scope.updateIdDisaster();
				$scope.updateIdVictims();
				callback($scope.result);
			 }else{
			    callback();
			 }
	  	}
	    
	    $scope.FilterByDateMonthYear = function(callback){
	    	if($scope.certain_date != null){
  				/*already had id_disaster and id_disaster_event*/
		  		$http({
			        url: '/query/query_5/filter_by_date',
			        method: "POST",
			        data: {
		                array_id: $scope.id_disasters,
		                date: $scope.certain_date
		            }
			    })
			    .then(function(response) {
		    		$scope.id_disasters = response.data;
					$scope.updateIdVictims();
					callback();
			    }, 
			    function(response) { // optional
			        callback("failed: "+response.data);
			    });
			}else if($scope.certain_month != null){
  				/*already had id_disaster and id_disaster_event*/
		  		$http({
			        url: '/query/query_5/filter_by_month',
			        method: "POST",
			        data: {
		                array_id: $scope.id_disasters,
		                date: $scope.certain_month
		            }
			    })
			    .then(function(response) {
		    		$scope.id_disasters = response.data;
					$scope.updateIdVictims();
					callback();
			    }, 
			    function(response) { // optional
			        callback("failed: "+response.data);
			    });
			}else if($scope.certain_year != null){
  				/*already had id_disaster and id_disaster_event*/
		    	// alert($scope.id_disasters)
		  		$http({
			        url: '/query/query_5/filter_by_year',
			        method: "POST",
			        data: {
		                array_id: $scope.id_disasters,
		                date: $scope.certain_year
		            }
			    })
			    .then(function(response) {
		    		$scope.id_disasters = response.data;
					$scope.updateIdVictims();
					callback();
			    }, 
			    function(response) { // optional
			        callback("failed: "+response.data);
			    });
			} else{

	    		callback();
			}
	    }

	    $scope.initiateIdDisaster = function(callback){
	    	$http({
		        url: '/query/query_5/get_disaster_event_query5',
		        method: "POST",
		    })
		    .then(function(response) {
		    	// alert(response.data)
			    $scope.data_disaster_event = response.data;
			    $scope.id_total_disasters = []
			    for (var i = response.data.length - 1; i >= 0; i--) {
			    	$scope.id_total_disasters = $scope.id_total_disasters.concat(response.data[i].id_disasters);
			    }
				$scope.id_disasters = $scope.id_total_disasters;
			    $scope.updateIdDisaster();
			    $scope.updateIdVictims();
		    	callback();
		    }, 
		    function(response) { // optional
		    	console.log("masuk2")
		        callback("failed: "+response.data);
		    });
	    }

	  	$scope.executePoin2 = function(){
	  		if($scope.poin_2){
	  			if($scope.poin_1){
	  				$scope.FilterByDateMonthYear( function(response){
	  				});
				}else{
					$scope.initiateIdDisaster(function(){

					/*should look at id_disaster_event on victim*/
						$scope.FilterByDateMonthYear( function(response){
		  				});
						// alert("lalal")
					})
				}
			}
	  	}
	    

	  	$scope.executePoin3 = function(){
	  		if ($scope.poin_1){
	  			$scope.FilterByDateMonthYear( function(){
					if($scope.data_village.length == 0){
						$scope.certain_village = null;
						$scope.partial_2_poin3(function(){});
					}else{
						$scope.certain_village = $scope.data_village[0]._id;
						$scope.partial_1_poin3(function(){
							$scope.partial_2_poin3(function(){});
						});
					}
				});
			 }else {
	  			$scope.initiateIdDisaster(function(){
					$scope.FilterByDateMonthYear( function(){
						if($scope.data_village.length == 0){
							$scope.certain_village = null;
							$scope.partial_2_poin3(function(){});
						}else{
							$scope.certain_village = $scope.data_village[0]._id;
							$scope.partial_1_poin3(function(){
								$scope.partial_2_poin3(function(){});
							});
						}
					});
				});
			 }
	  	};
	    
	  	$scope.partial_1_poin3 = function(callback){
	  		$http({
	        url: '/query/query_5/poin3',
	        method: "POST",
	        data: {
	        	id_victims: $scope.result,
                id_original_village: $scope.certain_village 
            }})
            .then(function(response) {
		    	if(response.data != null){
			    	$scope.result = [];
			    	for (var i = response.data.length - 1; i >= 0; i--) {
			    		$scope.result.push(response.data[i]._id);
			    	}
			    	callback();
		    	}
		    });
	  	};

	  	$scope.partial_2_poin3 = function(callback){
	  		$http({
	        url: '/query/query_5/poin3',
	        method: "POST",
	        data: {
	        	id_victims: $scope.result,
                certain_subdistrict: $scope.certain_subdistrict,
                certain_district: $scope.certain_district,
                certain_province: $scope.certain_province
            }})
            .then(function(response) {
		    	if(response.data != null){
			    	$scope.result = [];
			    	for (var i = response.data.length - 1; i >= 0; i--) {
			    		$scope.result.push(response.data[i]._id);
			    	}
		    	}
		    	callback();
		    });
	  	};

	    $scope.redirect_disaster_event = function(id){
            $window.open("/show/disaster_event/"+id, '_blank');
        };

   //      $scope.removeRecordedData = function(){
			// // $scope.id_disasters = [];
   //      }

		$scope.executeQuery = function(){
				/*Execute poin 1 directly using other function*/
				$scope.executePoin1(function(){
				/*Execute poin 2*/		
					$scope.executePoin2( function(){
					// console.log("A"+JSON.stringify(response))
				// 		// console.log("B"+JSON.stringify(response))
				// 		/*Execute poin 3*/
				// 		$scope.executePoin3( response, function(response){
							$scope.result = [];
							for (var i = response.length - 1; i >= 0; i--) {
					    		$scope.result.push(response[i]);
					    	}
				// 		});
					});
				});
			
		}
		$scope.data_village = [];
		 $scope.addVillage = function(id) {
		    $scope.data_village.push($scope.possibleVillages[id]);
			$scope.isOriginalVillageFilled = true;
	    };

	    $scope.deleteVillage = function(id) {
			$scope.isOriginalVillageFilled = false;
	    	$scope.data_village.splice(id, 1);
	    };
		 $scope.findVillageOnDB = function(){
			if($scope.searchStringVillage != undefined &&
				$scope.searchStringVillage.length >= 3 ){
				$http({
			        url: '/db/village/find',
			        method: "POST",
			        data: {
		                search_term: $scope.searchStringVillage
		            }
			    })
			    .then(function(response) {
			    	$scope.possibleVillages = response.data;
			    }, 
			    function(response) { 
			        alert("failed: findVillageOnDB"+response.data);
			    });
			}
		};	 
	});


</script>